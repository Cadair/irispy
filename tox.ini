[tox]
envlist =
    py{37,38}{,-oldestdeps,-devdeps,-online}
    build_docs
    codestyle
isolated_build = true
requires =
    setuptools >= 30.3.0
    pip >= 19.3.1
    tox-pypi-filter >= 0.10

[testenv]
# The following option combined with the use of the tox-pypi-filter above allows
# project-wide pinning of dependencies, e.g. if new versions of pytest do not
# work correctly with pytest-astropy plugins. Most of the time the pinnings file
# should be empty.
pypi_filter_requirements = https://raw.githubusercontent.com/sunpy/package-template/master/sunpy_version_pins.txt
# Pass through the following environemnt variables which may be needed for the CI
passenv = HOME WINDIR LC_ALL LC_CTYPE CC CI TRAVIS
# Run the tests in a temporary directory to make sure that we don't import
# the package from the source tree
changedir = .tmp/{envname}
# tox environments are constructued with so-called 'factors' (or terms)
# separated by hyphens, e.g. test-devdeps-cov. Lines below starting with factor:
# will only take effect if that factor is included in the environment name. To
# see a list of example environments that can be run, along with a description,
# run:
#
#     tox -l -v
#
description =
    run tests
    devdeps: with the latest developer version of key dependencies
    oldestdeps: with the oldest supported version of key dependencies
setenv =
    MPLBACKEND = agg
    COLUMNS = 180
    PYTEST_COMMAND = pytest -vvv --pyargs sunraster --cov=sunraster --cov-report= --cov-config={toxinidir}/setup.cfg {toxinidir}/docs
    astropydev,build_docs,online: HOME = {envtmpdir}
deps =
    # All our tests run in parallel which this plugin allows us to.
    pytest-xdist
    # The devdeps factor is intended to be used to install the latest developer version.
    # of key dependencies.
    devdeps: cython
    devdeps: git+https://github.com/astropy/astropy
    devdeps: git+https://github.com/sunpy/ndcube
    devdeps: git+https://github.com/sunpy/sunpy
    # Oldest deps we pin against.
    oldestdeps: sunpy<2.0.0
    oldestdeps: ndcube<2.0.0
    # These are specific online extras we use to run the online tests.
    online: pytest-rerunfailures
    online: pytest-timeout
    # Needed to work out test code coverage
    pytest-cov
# The following indicates which extras_require from setup.cfg will be installed
# dev is special in that it installs everything but we use tests here.
extras = tests
commands =
    !online: {env:PYTEST_COMMAND} {posargs}
    online: {env:PYTEST_COMMAND} --reruns 2 --timeout=180 --remote-data=any {posargs}

[testenv:build_docs]
changedir = docs
description = Invoke sphinx-build to build the HTML docs
extras = docs
commands =
    sphinx-build . ./_build/html -W -b html -d ./_build/.doctrees {posargs}

[testenv:codestyle]
skip_install = true
description = Run all style and file checks with pre-commit
deps =
    pre-commit
commands =
    pre-commit install-hooks
    pre-commit run --all-files
